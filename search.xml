<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>表达式求值</title>
      <link href="/posts/2e866599.html"/>
      <url>/posts/2e866599.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p><strong>学习目标</strong></p><p>掌握手算正则表达式转 后缀表达式、前缀表达式</p><p>理解计算的过程并能写出相应的代码</p><p>增加表达式求值的功能</p><p><strong>为什么需要前/ 后缀表达式？</strong></p><p>后缀表达式可以去除原式中的括号，不需要括号就可以知道运算的优先级，便于计算机理解运算。</p><blockquote><p>a+b*(c+d*e) 原表达式</p><p>a b c d e * + * + 后缀表达式</p></blockquote><p><strong>如何变换？手算</strong></p><p>首先找出优先级较高的运算符，将其依次标号，依次将运算符移到右侧的操作数后，熟练后可以不加括号直接转换。</p><p><img src="https://gitee.com/yancey597/img-load/raw/master/images/202309101734785.png" alt="image-20230910173403674"></p><p><strong>如何变换？机算</strong></p><p>从左往右依次扫描：</p><ul><li><p>1.遇到操作数</p><ul><li>全部压入操作数栈；</li><li>结束条件是遇到括号或者运算符</li></ul></li><li><p>2.遇到运算符</p><ul><li><p>2.1 遇到 + -</p><ul><li><p>当前运算符栈为空则直接输出</p></li><li><p>当前运算符栈不为空入栈</p></li></ul></li><li><p>2.2 遇到 * /</p><ul><li><pre><code> 当前运算符栈为空则直接输出</code></pre></li><li><pre><code> 不为空则将运算符栈弹出，直到栈空或者遇到(</code></pre></li></ul></li><li><p>2.3 (</p><ul><li>不为空则入栈</li><li>)<ul><li><pre><code>     弹出所有运算符直到遇到(</code></pre></li></ul></li></ul></li></ul></li></ul><p><strong>中缀转后缀表达式代码实现</strong></p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">void ExpreesionValue(char str[], char dest[]) {    /**     * @brief 求后缀表达式     * @note     * a*b+(c*d-e)     * 1*2+3+3*4     * 12*3+34*+     * 1.遇到操作数     *      全部压入操作数栈；     *      结束条件是遇到括号或者运算符     * 2.遇到运算符     *      2.1 遇到+ -     *          当前运算符栈为空则直接输出     *          当前运算符栈不为空入栈     *      2.2 遇到* /     *          当前运算符栈为空则直接输出     *          不为空则将运算符栈弹出，直到栈空或者遇到(     *      2.3 (     *          不为空则入栈     *          )     *          弹出所有运算符直到遇到(     */    SqStack S;    InitStack(S, 20);    char e;    int i = 0;    int j = 0;        while (str[i] != '\0') {        if (Isdigit(str[i])) {            // 将所有操作数输出并添加空格            dest[j++] = str[i++];            while (Isdigit(str[i])) {                dest[j++] = str[i++];            }            dest[j++] = ' ';        } else {            // 进行判空操作，如果为空或为'('直接入栈            if (Empty(S) || str[i] == '(') {                Push(S, str[i++]);            } else if (str[i] == ')') {                //如果遇到')'，在遇到'('前进行弹栈输出，最后将'('进行弹栈。                while (S.data[S.top] != '(') {                    Pop(S, dest[j++]);                }                char temps;                Pop(S, temps);                i++;            } else {                // 如果栈顶元素 &gt;= 当前符号优先级，则弹栈输出，最后将该符号入栈                while (priority(str[i]) &lt;= priority(S.data[S.top])) {                    Pop(S, dest[j++]);                    if (Empty(S)) {                        break;                    }                }                Push(S, str[i++]);            }        }    }    // 将栈清空输出    while (!Empty(S)) {        Pop(S, dest[j++]);    }    dest[j] = '\0';}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>中缀表达式转前缀表达式代码实现</strong></p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">void ExpreesionValue(char str[], char dest[]) {    /**     * 前缀表达式     * a+b*(c+d*e)     * +a*b+c*de     *     * 从右往左扫描     *      1.栈为空或遇')' 直接入栈     *      2.遇到操作数直接输出     *      3.遇到'(' 将栈内的元素弹栈输出，直到遇到')' ,并将')'弹出     *      4.如果栈顶元素 &gt;= 当前元素的优先级，则弹栈输出，最后将该符号入栈。     *      5.将栈内元素清空，并在最后置入'\0'     */    SqStack S;    InitStack(S, 20);    char e;    int j = 0;    int length = strlen(str);    int i = length - 1;    while (i &gt;= 0) {        if (Isdigit(str[i])) {            dest[j++] = str[i--];            while (Isdigit(str[i])) {                dest[j++] = str[i--];            }            dest[j++] = ' ';        } else {            if (Empty(S) || str[i] == ')') {                Push(S, str[i--]);            } else if (str[i] == '(') {                while (S.data[S.top] != ')') {                    Pop(S, dest[j++]);                }                char temps;                Pop(S, temps);                i++;            } else {                while (priority(S.data[S.top]) &gt;= priority(str[i])) {                    Pop(S, dest[j++]);                    if (Empty(S)) {                        break;                    }                }                Push(S, str[i--]);            }        }    }    while (!Empty(S)) {        Pop(S, dest[j++]);    }    dest[j] = '\0';}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><strong>中缀转前缀表达式、后缀表达式的对比：</strong></p></blockquote><ul><li><p>扫描顺序不同，后缀表达式是从左往右扫描。前缀表达式需要<em>先计算中缀表达式长度</em>从右往左扫描。</p></li><li><p>对括号的处理不同</p><ul><li>后缀表达式对 ‘(‘ 及 空进行直接入栈的操作，而前缀表达式则是对 ‘)’直接进行入栈的操作。</li><li>对另一半匹配的括号处理方式相同。</li></ul></li><li><p>对运算符的处理相同，都是根据运算符的优先级决定是否出栈：栈顶元素 &gt;=  当前元素的优先级则需要出栈，再将该运算符入栈、</p></li><li><p> 前缀表达式输出到dest数组后，因为和存储是相反的，输出最终的前缀表达式结果时需要逆向输出结果。</p></li></ul><blockquote><p>表达式求值</p></blockquote><p>思想：表达式求值需要构建两个栈，分别<code>存储运算符</code>和<code>操作数</code></p><p>扫描后缀表达式时，从左往右读取。</p><ul><li>扫描到操作数将其转换为<code>int</code>类型后进行入栈操作，</li><li>扫描到运算符时判断其运算类型，并从操作数栈中取出两个操作数进行运算，并将结果重新放回操作数栈</li><li>最后将操作数栈的结果输出即可</li></ul><p><strong>代码实现</strong></p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">int CaculateExpress(char str[]) {    OqStack S1; //操作数栈    S1.capacity = 20;    S1.data = (int *)malloc(sizeof(int) * S1.capacity);    S1.top = -1;    SqStack S2; //符号栈    InitStack(S2, 20);    int left, right, i, j;    char ch;    int result = 0;    while (str[i] != '\0') {        int value = 0;        if (Isdigit(str[i])) {            while (str[i] != ' ') {                value = value * 10 + str[i++] - '0';            }            Push(S1, value);            while (str[i] == ' ') {                i++;            }        } else if (Ismul(str[i]) || Issum(str[i])) {            char sign = str[i];            Pop(S1, right);            Pop(S1, left);            if (sign == '+') {                value = left + right;            } else if (sign == '-') {                value = left - right;            } else if (sign == '*') {                value = left * right;            } else {                if (right == 0) {                    printf("Error");                    return -1;                }                value = left / right;            }            i++;            Push(S1, value);        }            }    if (S1.top != -1) {        result = S1.data[S1.top--];        return S1.top == -1 ? result : -1;    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p><strong>永远相信美好的事情即将发生！</strong></p><p><strong>Yancey</strong><br>2023.09.11</p></body></html>]]></content>
      
      
      <categories>
          
          <category> 学习记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VSCode配置C/C++环境</title>
      <link href="/posts/e2c5bfe8.html"/>
      <url>/posts/e2c5bfe8.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h1 id="VSCode-配置C-C-环境"><a href="#VSCode-配置C-C-环境" class="headerlink" title="VSCode 配置C/C++环境"></a>VSCode 配置C/C++环境</h1><h2 id="1-VSCode-介绍"><a href="#1-VSCode-介绍" class="headerlink" title="1.VSCode 介绍"></a>1.VSCode 介绍</h2><p>Visual Studio Code是一款由微软开发且跨平台的免费原始码编辑器。该软体支援语法突显、程式码自动补全、程式码重构功能，并且内建了命令列工具和 Git 版本控制系统。使用者可以更改布景主题和键盘捷径实现个人化设定，也可以透过内建的扩充元件程式商店安装扩充元件以加强软体功能。(Via:<a href="https://zh.wikipedia.org/wiki/Visual_Studio_Code">维基百科</a>)</p><img src="https://gitee.com/yancey597/img-load/raw/master/images/image-20220122025027764.png"><h2 id="二、下载VSCode"><a href="#二、下载VSCode" class="headerlink" title="二、下载VSCode"></a>二、下载VSCode</h2><p>1.官网下载(<a href="https://code.visualstudio.com/">官网链接</a>)</p><p>首先，通过搜索引擎或者点击上方链接进入VSCode官网，进入官网之后点击<code>Download for Windows</code>蓝色按钮旁边的下拉列表按钮，可以根据自身所用操作系统选取对应的版本。</p><blockquote><p><strong>Stable 与 Insiders版本的区别</strong></p><p>Stable版本（蓝色）是稳定的发行版本，比较稳定</p><p>Insiders版本（绿色）类似于Beta版本，会加入一些新功能，但可能存在Bug，</p></blockquote><p><img src="https://yancey597.github.io/posts/e2c5bfe8/image-20220116045834418.png"></p><p>Windows、Linux【默认提供的都是64位版本的】，如需32位版本点击红框下方的<code>Other downloads</code>即可</p><p>不知道自己的操作系统是32位还是64位的话(在我的电脑窗口中右击选择属性，即可查看)。</p><blockquote><p><strong>User Installer 和 System Installer的区别</strong></p><p>The basic <strong>differences between</strong> the two is that the <strong>system</strong> version installs on the file <strong>system</strong> like every other app. The <strong>user install</strong> is basically a click-once (or web <strong>installer</strong>) version that installs <strong>in the User</strong> folder of the machine.(Via:<a href="https://www.quora.com/What-is-the-difference-between-a-user-installer-and-a-system-installer">Quora</a>)</p><p>两者之间的基本区别在于System版像其他所有应用程序一样安装在文件系统上，需要管理员权限。 </p><p>User版基本上是安装在机器的用户文件夹中的单击一次（或 Web 安装程序）版本。  </p></blockquote><p><img src="https://yancey597.github.io/posts/e2c5bfe8/image-20220116050235142.png"></p><p>下载完成后，按提示安装,可以根据自己的个人情况选择安装路径。</p><p>在附加项<code>勾选添加到PATH</code>，可以在控制台打开VSCode，建议勾选，其余选项为可选项。</p><p><img src="https://yancey597.github.io/posts/e2c5bfe8/image-20220116052040834.png"></p><h2 id="三、配置环境"><a href="#三、配置环境" class="headerlink" title="三、配置环境"></a>三、配置环境</h2><h3 id="1-设置简体中文环境"><a href="#1-设置简体中文环境" class="headerlink" title="1. 设置简体中文环境"></a>1. 设置简体中文环境</h3><p>下载安装完后，打开VSCode，此时默认为英文环境，可根据自己的情况下载<code>Chinese语言包</code>实现汉化</p><p><img src="https://yancey597.github.io/posts/e2c5bfe8/image-20220116052720865.png"></p><ul><li>点击左侧边栏的<code>插件拓展中心</code>按钮进入插件拓展中心，在<code>搜索栏搜索Chinese</code> ,点击<code>Install</code>进行安装</li></ul><p><img src="https://yancey597.github.io/posts/e2c5bfe8/image-20220116052907063.png"></p><ul><li>安装完后点击左下角<code>Restart按钮</code>或者手动重启即可完成对VSCode简体中文环境的配置</li></ul><p><img src="https://yancey597.github.io/posts/e2c5bfe8/image-20220116053130226.png"></p><p><img src="https://yancey597.github.io/posts/e2c5bfe8/image-20220116053141621.png"></p><h3 id="2-配置C-C-环境"><a href="#2-配置C-C-环境" class="headerlink" title="2.配置C/C++ 环境"></a>2.配置C/C++ 环境</h3><blockquote><p>VSCode只是一款<code>文本编辑器</code>，不仅需要安装对应编程语言的扩展，还需要安装相应的<code>编译器或者解释器</code>。</p></blockquote><h4 id="2-1-下载MinGW编译器"><a href="#2-1-下载MinGW编译器" class="headerlink" title="2.1 下载MinGW编译器"></a>2.1 下载MinGW编译器</h4><p>C/C++的编译器有很多，这里选择开源的MinGW编译器。大家可以从<a href="https://sourceforge.net/projects/mingw-w64/files/mingw-w64/mingw-w64-release/">官网下载</a>上下载64位的编译器，直接打开进行安装。</p><p><code>Version</code>选8.1.0最新版本，对语言的新特性有较好的支持；</p><p><code>Architecture</code>是32位和64位的选择，32位请选择x86；</p><p><code>Threads</code>选择win32(Linux选择posix；</p><p><code>Exception</code>选择默认的seh;</p><p><img src="https://yancey597.github.io/posts/e2c5bfe8/image-20220116053130226.png"></p><p>完成安装后，使用快捷键Win+R 输入Cmd 输入<code>gcc-v</code> 可以检查是否安装成功。</p><p><img src="https://yancey597.github.io/posts/e2c5bfe8/image-20220116054109492.png"></p><h4 id="2-2-配置环境变量"><a href="#2-2-配置环境变量" class="headerlink" title="2.2 配置环境变量"></a>2.2 配置环境变量</h4><p>在计算机窗口右击进入属性，点击<code>高级系统设置</code>，点击<code>环境变量</code>。</p><p>点击浏览，找到并将<code>MinGW\bin</code>目录放入环境变量，依次点击确定即可。</p><p>![image-20220116054310556](C:\Users\Yancey\Desktop\Programming master\Java\笔记\Java\image-20220116054310556.png)</p><h4 id="2-3-下载C-C-拓展"><a href="#2-3-下载C-C-拓展" class="headerlink" title="2.3 下载C\C++ 拓展"></a>2.3 下载C\C++ 拓展</h4><p><img src="https://yancey597.github.io/posts/e2c5bfe8/image-20220116054704355.png"></p><h4 id="2-4-完成编译器配置"><a href="#2-4-完成编译器配置" class="headerlink" title="2.4 完成编译器配置"></a>2.4 完成编译器配置</h4><ul><li>在VSCode界面，使用快捷键<code>Ctrl + Shift + p</code>，输入 <code>&gt;C/C++</code>，选择编辑配置(UI);</li></ul><p><img src="https://yancey597.github.io/posts/e2c5bfe8/image-20220116054816053.png"></p><ul><li>将编译器路径设置为刚刚下载好的路径bin下的<code>gcc.exe</code></li></ul><p><img src="https://yancey597.github.io/posts/e2c5bfe8/image-20220116054921019.png"></p><ul><li>InteliSense 设置为自己系统对应的版本即可</li></ul><p><img src="https://yancey597.github.io/posts/e2c5bfe8/image-20220116055335079.png"></p><h4 id="2-4-测试"><a href="#2-4-测试" class="headerlink" title="2.4 测试"></a>2.4 测试</h4><p>打开文件夹(<code>Ctrl + k + o</code>)，创建.c文件编写代码进行测试</p><ul><li>编写完代码后点击<code>F5</code>即可开始调试</li><li>选择<code>C++(GDB)</code></li></ul><p><img src="https://yancey597.github.io/posts/e2c5bfe8/image-20220116055726364.png"></p><ul><li>选择<code>gcc.exe</code>(注意安装目录是否一致)</li></ul><p><img src="https://yancey597.github.io/posts/e2c5bfe8/image-20220116055733331.png"></p><ul><li><code>Enjoy it!</code></li></ul><p><img src="https://yancey597.github.io/posts/e2c5bfe8/image-20220116055710923.png"></p><h2 id="四、Ending"><a href="#四、Ending" class="headerlink" title="四、Ending"></a>四、Ending</h2><p>尽管我自从用了Clion和IDEA后，打开VSC的次数屈指可数，但不可否认VSC仍然是一款不错轻量化的编辑器，搭配其拓展插件可以媲美部分IDE的体验，但用过IDEA后，我还是选择Jerbrains的IDE，Jerbrains YYDS！</p><p><img src="https://yancey597.github.io/posts/e2c5bfe8/image-20220116060317042.png"></p><hr><p><strong>永远相信美好的事情即将发生！</strong></p><p><strong>永远年轻，永远在路上。</strong></p><p><strong>Yancey</strong><br>2022.01.16</p></body></html>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>指针及引用传参</title>
      <link href="/posts/3ffa4f4e.html"/>
      <url>/posts/3ffa4f4e.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p><img src="https://gitee.com/yancey597/img-load/raw/master/images/image-20220122030027428.png" alt="image-20220122030027428"></p><h2 id="一、引出问题"><a href="#一、引出问题" class="headerlink" title="一、引出问题"></a>一、引出问题</h2><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;typedef int ElemType;typedef struct LNode {  ElemType data;  struct LNode *next;} LNode, *LinkList;bool InitList(LinkList L) {  L = (LNode *)malloc(sizeof(LNode));  L-&gt;data = 1;}int main(void) {  LinkList L;  InitList(L);  printf("%d", L-&gt;data);//false  return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>好久没碰C，于是想拿基本的数据结构来熟悉下代码。<br>上述代码想要实现的功能是调用InitList()函数，实现对链表的初始化，但经过调用后的printf()测试之后发现报错，一直没有意识到问题所在。经过大半个小时的研究和DeBug、和一哲交流良久，意识到了问题同时也有了今天的这篇博客，接下来进入正文部分。</p></blockquote><h2 id="二、指针和指针变量"><a href="#二、指针和指针变量" class="headerlink" title="二、指针和指针变量"></a>二、指针和指针变量</h2><blockquote><p>一定要区分指针和指针变量，我发现我的问题就是太久没有碰C，对相关概念出现了模糊化。</p></blockquote><h3 id="1-指针变量"><a href="#1-指针变量" class="headerlink" title="1. 指针变量"></a>1. 指针变量</h3><p>指针变量，本质上是一个变量，他<strong>存放的是一个地址</strong>。</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">int a = 2;int *p = &amp;a;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>示例代码中，创建了一个int 类型的<strong>指针变量</strong></p></blockquote><h3 id="2-指针"><a href="#2-指针" class="headerlink" title="2. 指针"></a>2. 指针</h3><p>指针通常<strong>被理解为地址</strong>的意思，我们说的创建一个<strong>int类型的指针</strong>，其实是创建了一个指针类型的变量。在这个地方容易引起歧义：什么时候指针这个词表示的是一个<strong>地址</strong>、什么时候又是一个<strong>指针变量</strong>。</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">int a = 2;int *p = &amp;a;//p 是一个指向int类型的指针(变量)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="3-写出错误代码的原因"><a href="#3-写出错误代码的原因" class="headerlink" title="3. 写出错误代码的原因"></a>3. 写出错误代码的原因</h3><blockquote><p>回到开头的问题，为什么调用InitList()函数，实现对链表的初始化，但经过调用后的printf()测试之后发现报错。</p></blockquote><p>我定义这个函数的时候想着说传一个指针，我这里想传递的是一个<strong>地址</strong>，但实际上传递的是一个<strong>指针变量</strong>赋给这个形参。换句话说这里的形参是一个<strong>指针变量</strong>，而不是一个地址，我当时一直陷入这里是一个”<strong>地址</strong>“的误区。</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">bool InitList(LinkList L) {//传递的值是一个指针变量  L = (LNode *)malloc(sizeof(LNode));  L-&gt;data = 1;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>所以我后续的malloc操作是针对<strong>形参的L</strong>进行的，我修改了L中存放的地址值，而L在函数调用结束后就出栈了，所以并没有影响实际值。这个说法其实不太严谨，但姑且这么理解。核心原因是因为日常交流时，混淆了指针和指针变量的意思。</p><h3 id="三、解决方案"><a href="#三、解决方案" class="headerlink" title="三、解决方案"></a>三、解决方案</h3><h3 id="1-用指针"><a href="#1-用指针" class="headerlink" title="1. 用指针"></a>1. 用指针</h3><blockquote><p>代码想要实现的效果是创建并初始化链表，那么修改后的代码应该是这样的。</p></blockquote><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">LinkList InitList(LinkList L) {  L = (LNode *)malloc(sizeof(LNode));  L-&gt;data = 1;  if (L == NULL) {    return NULL;  }  return L;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>将L作为<strong>返回值</strong>，直接返回到主调函数，从而实现既定效果。</p><h3 id="2-用引用"><a href="#2-用引用" class="headerlink" title="2. 用引用"></a>2. 用引用</h3><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">bool InitList(LinkList &amp;L) {  L = (LNode *)malloc(sizeof(LNode));  L-&gt;data = 1;  if (L == NULL) {    return false;  }  return true;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>用<strong>引用</strong>就能很好的解决这一问题，引用相当于变量的别名，可以<strong>直接</strong>对该变量进行数据的<strong>修改</strong>操作。</p><p><strong>总结一下就是一定要区分指针和指针变量的区别，写代码之前想清楚。</strong></p><hr><p><strong>永远相信美好的事情即将发生！</strong></p><p><strong>Yancey</strong><br>2021.11.01 01:11</p></body></html>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>抽象数据类型</title>
      <link href="/posts/27273.html"/>
      <url>/posts/27273.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>   今天学习到408数据结构时遇到一个奇奇怪怪的东西：抽象数据类型，这个概念的定义如此之长，也不是特别容易理解。然后我去Google查阅了大量资料后算是把这个概念弄清楚了。接下来简单谈下我的对抽象数据类型的理解。</p><blockquote><p>抽象数据类型(Abstract Data Type 简称ADT)是指一个数学模型以及定义在此数学模型上的一组操作。抽象数据类型需要通过固有数据类型（高级编程语言中已实现的数据类型）来实现。抽象数据类型是与表示无关的数据类型，是一个数据模型及定义在该模型上的一组运算。</p></blockquote><p><strong>太抽象以至于不太好理解，其实可以用一个等式来描述抽象数据类型。</strong></p><p><strong>抽象数据类型 = 逻辑结构 + 数据运算</strong></p><h3 id="1-逻辑结构"><a href="#1-逻辑结构" class="headerlink" title="1. 逻辑结构"></a>1. 逻辑结构</h3><p>说到<strong>逻辑结构</strong>不得不从头讲起：</p><p>我们生活在现实世界中，如何描述这世界万物呢？画家可以用手中的画笔，而我们如何来描述这个世界呢？我们可以用<strong>数据</strong>来描述这个世界。</p><p><img src="https://yancey597.github.io/posts/27273/sjysj.jpg"></p><p>接下来是层层递进的概念：</p><p>数据是信息的<strong>载体</strong>，用来描述客观事物属性的数、字符及所有能被<strong>计算机读取</strong>(二进制0、1)识别的符号的集合。</p><p><strong>数据元素</strong>是数据的基本单位，一个数据元素可以包括多个<strong>数据项</strong>，数据项是数据元素的最小构成单位。</p><p>具有相同性质的数据元素称为<strong>数据对象</strong>。</p><p>而<strong>数据元素</strong>间存在一种或多种关系的则可以称之为<strong>数据结构</strong>。</p><p>而数据的<strong>逻辑结构</strong>是数据结构的三要素之一。</p><p>常见的逻辑结构分为线性和非线性，这里就不一一展开了。</p><h3 id="2-数据运算"><a href="#2-数据运算" class="headerlink" title="2. 数据运算"></a>2. 数据运算</h3><p>施加在数据上的运算包括运算的定义和实现。运算的定义是针对逻辑结构的，指出运算的功能；运算的实现是针对存储结构的，指出运算的具体操作步骤。</p><p>比如对数据的<strong>增删改查</strong>。</p><h3 id="3-抽象数据类型"><a href="#3-抽象数据类型" class="headerlink" title="3.抽象数据类型"></a>3.抽象数据类型</h3><p>逻辑结构不涉及数据在计算机中<strong>具体的实现和存储</strong>，这些操作是由存储结构决定的，这就是说，抽象数据类型只需考虑问题本身即可。</p><p>抽象数据类型是在不涉及具体的，和计算机系统相关的细节情况下，优先理解问题本身，在此基础上，实现用计算机求解问题的过程。这就是使用抽象数据类型的目的。</p><p>抽象数据类型就是在这种形式化的描述下把数据的组成和如何操作的问题描述清楚，且<strong>没有涉及到具体的计算机具体实现的一些问题</strong>。从数据对象中看出，<strong>抽象数据类型是由基本数据类型组成</strong>。</p><p>就是告诉你这个东西是什么，有什么特征，但不关心具体是如何实现这个东西的。</p><h3 id="4-抽象数据类型和数据结构的区别"><a href="#4-抽象数据类型和数据结构的区别" class="headerlink" title="4.抽象数据类型和数据结构的区别"></a>4.抽象数据类型和数据结构的区别</h3><p>ADT is to a Data Structure, what an Interface (what it does) is to a Class (how it does it)</p><p>ADT 之于数据结构，接口（它做什么）之于类（它如何做）</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">ADT<span class="token operator">:</span> <span class="token class-name">List</span>DS<span class="token operator">:</span>  <span class="token class-name">ArrayList</span><span class="token punctuation">,</span> <span class="token class-name">LinkedList</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>ADT<span class="token operator">:</span> <span class="token class-name">Map</span>DS<span class="token operator">:</span>  <span class="token class-name">HashMap</span><span class="token punctuation">,</span> <span class="token class-name">TreeMap</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p><strong>永远相信美好的事情即将发生！</strong></p><p><strong>Yancey</strong></p>1635508815000</body></html>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>感谢你爱我</title>
      <link href="/posts/30626.html"/>
      <url>/posts/30626.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><blockquote><p>宜昌，这不是我们最后一次见面。</p></blockquote><h1 id="感谢你爱我"><a href="#感谢你爱我" class="headerlink" title="感谢你爱我"></a>感谢你爱我</h1><h2 id="一、上周总结"><a href="#一、上周总结" class="headerlink" title="一、上周总结"></a>一、上周总结</h2><ul><li><input disabled="" type="checkbox"> <strong>早睡早起</strong><blockquote><p>日均睡眠时间：6小时47分钟，日均入睡时间为0:42，抛开去宜昌见丢火车那天，基本是完成了既定计划。</p></blockquote></li></ul><p><img src="https://yancey597.github.io/posts/30626/sleep.jpg"></p><ul><li><input disabled="" type="checkbox"> <strong>每天坚持学习</strong><blockquote><p>上周继续专精Java，学了Java面向对象的封装、继承、多态，不得不感叹高级语言面向对象的巧妙，嗯，Java yyds！</p></blockquote></li></ul><p><img src="https://yancey597.github.io/posts/30626/java.jpg"></p><blockquote><p>上周开始计算机考研408大纲的学习，第一门是计算机网络，相比于Java来说有些许枯燥，但还是坚持学完了第一部分，并上传一篇博客。</p></blockquote><p><img src="https://yancey597.github.io/posts/30626/network.jpg"></p><ul><li><input disabled="" type="checkbox"> <strong>坚持锻炼</strong></li></ul><p><img src="https://yancey597.github.io/posts/30626/yeqi.jpg"></p><p><img src="https://yancey597.github.io/posts/30626/yeqi1.jpg"></p><blockquote><p>本周完成了两次长距离骑行，总距离接近100km，和原计划比算是勉强及格(哈哈哈哈被一哲吐槽。 </p></blockquote><p><img src="https://yancey597.github.io/posts/30626/yeqi2.jpg"></p><blockquote><p>然后上下课基本上自行车代步，保证了每天的基本锻炼量，提高了出行效率(×)，更多的时间弹吉他(√)；</p></blockquote><ul><li><input disabled="" type="checkbox"> <strong>减少emo</strong><blockquote><p>期待了一个夏天的巡演就这么来啦！！！本周见了心心念念的丢火车，如此之开心，然后emo的次数屈指可数，嗯！真不错。</p></blockquote></li></ul><p><img src="https://yancey597.github.io/posts/30626/dhc.jpg"></p><h2 id="二、下周计划"><a href="#二、下周计划" class="headerlink" title="二、下周计划"></a>二、下周计划</h2><ul><li><input disabled="" type="checkbox"> <strong>依然是早睡早起</strong><br>  把所有工作移到白天完成，在22:30以后尽量不触碰电子设备，把很久之前的书拿出来看看，尝试在23:00准时休息。</li></ul><p>现在看来不太现实，emm，尝试在0：00休息吧，然后还是尽量不触碰电子设备，把入睡时间提到0：30之前。</p><ul><li><input disabled="" type="checkbox"> <strong>学习内容</strong><br>  Java 尽快结束面向对象课程，开始新内容的学习。围绕408大纲开始推进，用两天时间设定好学习计划：本周开始计算机组成原理、数据结构、计网的同步学习。尝试利用其他时间学英语。</li></ul><p>  吉他、乐理随缘学习，把《西湖》的间奏拿下。</p><p>  每天睡觉之前好好学习优秀摄影师的摄影作品，每天仿拍10张。</p><ul><li><p><strong>坚持锻炼</strong><br>  距离每月250km的目标还有150km，根据天气情况合理安排骑行计划。</p></li><li><p><strong>掌控情绪</strong><br>  接受不良情绪的存在，去慢慢消化。</p></li></ul><h2 id="三、再去宜昌"><a href="#三、再去宜昌" class="headerlink" title="三、再去宜昌"></a>三、再去宜昌</h2><p><img src="https://yancey597.github.io/posts/30626/12.jpg"></p><p>  相比于上次来宜昌，整个人比想象中要放松很多，这次能更加从容(或许)的走过这座城市的街头、打开心扉感受来自江城的温度。短暂的呆过几个小时，尽管有些许不舍，但人生的列车又要往南方开去，一直往南方开、一直往武汉开～(差点唱出来)。<br><img src="https://yancey597.github.io/posts/30626/20.jpg"></p><p><img src="https://yancey597.github.io/posts/30626/21.jpg"></p><p><img src="https://yancey597.github.io/posts/30626/22.jpg"></p><p>  在南方车站见了丢火车，这是我第一次来LiveHouse，哇这感觉简直不要太棒！平时一直心心念念着要见他们，但当我看到南方车站门口的感谢你爱我海报时还是感觉不太真实。</p><p><img src="https://yancey597.github.io/posts/30626/1.jpg"></p><p><img src="https://yancey597.github.io/posts/30626/2.jpg"></p><p><img src="https://yancey597.github.io/posts/30626/3.jpg"></p><p><img src="https://yancey597.github.io/posts/30626/4.jpg"></p><p><img src="https://yancey597.github.io/posts/30626/5.jpg"></p><p>  这种情况没持续多久，当火车日记的响起，感受到来自身边人释放的热情、球子他们出现在离你不到3m的舞台，瞬间把我拉回现实。爱死现场氛围，爱死他们了。一句话，<strong>我和LiveHouse相见恨晚！</strong></p><p><img src="https://yancey597.github.io/posts/30626/6.jpg"></p><p><img src="https://yancey597.github.io/posts/30626/7.jpg"></p><p><img src="https://yancey597.github.io/posts/30626/8.jpg"></p><p><img src="https://yancey597.github.io/posts/30626/9.jpg"></p><p><img src="https://yancey597.github.io/posts/30626/10.jpg"></p><p>  唯一的小插曲，当现场响起《生日快乐》，一秒破防，压抑这么久险些当场泪奔… 但很快又随着兴奋的人群开始新一轮的快乐….. </p><p><img src="https://yancey597.github.io/posts/30626/11.jpg"></p><p>  因为喜欢丢火车，来自五湖四海的我们聚在一起(有个海南过来的拿旗小伙)，缘分妙不可言。</p><p><img src="https://yancey597.github.io/posts/30626/19.jpg"></p><p>  最离谱的是居然让我找到了一个和我去程同趟高铁，返程同趟火车的朋友，下午和他在宜昌逛了逛，晚上也一起出去吃了夜宵喝了点酒。和他聊了很多很多，他给我讲了参加去音乐节、参军经历，他今年大四准备考研，也跟我分享了自己考研的经验同时鼓励我要好好学习。</p><p><img src="https://yancey597.github.io/posts/30626/18.jpg"></p><p>  也认识了同样喜欢音乐的”前排VIP”们，直接晒合影吧，以后来武汉可以一起玩呀！</p><p><img src="https://yancey597.github.io/posts/30626/17.jpg"></p><p>  最后小小的晒波战利品，不会吧，还有人没有签名？</p><p><img src="https://yancey597.github.io/posts/30626/15.jpg"></p><p><img src="https://yancey597.github.io/posts/30626/qm1.jpg"></p><p><img src="https://yancey597.github.io/posts/30626/qm2.jpg"></p><p><img src="https://yancey597.github.io/posts/30626/qm3.jpg"></p><p><img src="https://yancey597.github.io/posts/30626/qm4.jpg"></p><p>  喜欢丢火车的原因是丢火车给你撕心裂肺的感觉和其他乐队不同，同样是心里有无奈和刺痛，但他们不会爆发，而是一直面带微笑的看着你，慢慢的将这个世界的真相展现给你，告诉你可以消极、但不要持续太长时间。<strong>世界上只有一种英雄主义，那就是看清生活的真相后依然热爱生活。</strong></p><p>  来见丢火车最大的感触就是，或许世界上真的没有无法逾越的距离，就像我从来没有想过我会在线下见到他们，但还是见面了，嗯…..省略1k字。</p><p><img src="https://yancey597.github.io/posts/30626/13.jpg"></p><p>  说到这儿，想起来数据结构老师上课说的话：不要把时间都用在宿舍打游戏，实在不知道干嘛可以去跑步，比如一晚上就跑5km，刚开始可能很难，特别是刚开始跑的时候，但跑完之后你会发现也没想象中的那么难。一直坚持下去你想，连跑步这么难的事都坚持下来了，还有什么事是做不了的。</p><p>  想到了我骑行600KM来学校的经历，说真的我本人的感触都没身边人那么大，包括我朋友、同事、亲戚以及父母的同事。这个事件导致我在他们眼里的形象被神话了。我一开始确实觉得是个不值一提的事情，但听完刚刚这些，豁然开朗，生活也没想象中的那么糟嘛，现在经历的一切有骑行中经历的困难吗？<strong>保康县城那一眼望不到头的346国道、南漳连续几公里的上坡、孙桥镇没有路灯的314省道…….<strong>孤独、平静、愤怒几乎所有极端的情绪都曾经出现过，但当被雨淋一天、衣服沾满泥土，不知走出多远，从一道曲曲弯弯的弯路走过，不经意回头看到347国道的夕阳时，</strong>他就在那里，一直等着你的到来。</strong>我记不清当时的心情了，除了感叹大自然的力量外，就只剩那一瞬间感觉一切都值得。</p><p><img src="https://yancey597.github.io/posts/30626/121.jpg"></p><p>  最近经历不好的事情是挺多的，以至于我忘了之前的很多感受，那些真正让我快乐、烦恼的。相比于现在这些，算得了什么呢？</p><p>生活总归平静，一切交给时间。</p><hr><p><strong>永远相信美好的事情即将发生！</strong></p><p><strong>Yancey</strong></p>1635175712000</body></html>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 周记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>久违的快乐</title>
      <link href="/posts/26767.html"/>
      <url>/posts/26767.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h1 id="久违的快乐"><a href="#久违的快乐" class="headerlink" title="久违的快乐"></a>久违的快乐</h1><blockquote><p>嗯，是时候该停下来了，要开心起来。</p></blockquote><h2 id="一、每周总结"><a href="#一、每周总结" class="headerlink" title="一、每周总结"></a>一、每周总结</h2><p><strong>计划完成情况</strong></p><ul><li><strong>早睡早起</strong><br>  基本完成了，<strong>日平均入睡时间为01:40</strong>，其实实际上就两天肝代码熬到这么晚过，总体来看入睡时间比上个星期提前了一个多小时还是有进步的。</li></ul><p><img src="https://yancey597.github.io/posts/26767/sleep.jpg#pic_center"></p><ul><li><strong>每天坚持学习</strong><br>  坚持下来啦，本周继续学习了Java，对面向对象编程又有了新的了解，相比于C语言我可能会更喜欢Java，不出意外的他将成为我的主力开发语言了。</li></ul><p><img src="https://yancey597.github.io/posts/26767/note.jpg#pic_center"></p><ul><li><strong>每天坚持锻炼</strong><br>  本周的基本锻炼量应该是达到了嘿嘿，有两次稍微远一点的骑行。第一次和两个朋友去了藏龙岛，那是一个非常美好的下午，我拍了好多好看的照片。<br><a href="https://weibo.com/5316637941/KCgLPfPtA">点击查看更多图片</a></li></ul><p><img src="https://yancey597.github.io/posts/26767/me.jpg#pic_center"></p><ul><li><strong>掌控情绪</strong><br>  基本上是做到啦(95%?)，大部分时间都是正常可控的，一旦有什么想法，会立即告诉自己停下来，大多数时候就直接停下来了，然后实在停不下来就去找朋友聊会天，然后就恢复了。依然没有关注她的任何消息，嗯，真的好多了。</li></ul><blockquote><p>我爸妈有看我博客的习惯，但我不会因为这个就写假话，博客的意义就是说真话，所以您二位放心吧，我真的好多了。</p></blockquote><hr><h2 id="二、下周计划"><a href="#二、下周计划" class="headerlink" title="二、下周计划"></a>二、下周计划</h2><ul><li><strong>丢火车Livehouse</strong></li></ul><p>  喜欢丢火车已经很久很久啦，一直想去现场见他们，前学生时代没时间没精力一直没能实现。</p><p><img src="https://yancey597.github.io/posts/26767/yc.jpg#pic_center"></p><p><img src="https://yancey597.github.io/posts/26767/picket.jpg#pic_center"></p><p>  最近恶补了丢火车的所有专辑，每一首歌真的是倒唱如流~还是第一次去Livehouse，这两天得抓紧预习下，避免显得自己是个萌新哈哈哈哈。知道宜昌有巡演后真的是期待了一个暑假，如今巡演就这么来了，马上就能见到你们了。尽管提到宜昌会有点小小的失落，朋友也说让我别去。但错过这次不知道又要等多久，真的不能再错过这次了！</p><p><img src="https://yancey597.github.io/posts/26767/gedan.jpg#pic_center"></p><p><img src="https://yancey597.github.io/posts/26767/gedan1.jpg#pic_center"></p><ul><li><strong>日常学习</strong></li></ul><p>  本周争取再看200集宋红康老师的课，把几个项目都做一做，不能偷懒。</p><p><img src="https://yancey597.github.io/posts/26767/java.jpg#pic_center"></p><p>  把乐理再捡起来，成为独立音乐人那也曾是17岁少年的梦想，这么多年也算是写了两张让自己满意而且能入选银河计划的专辑，但没等到发布，歌曲的主角离开了。MCN那边知道我的情况后还是挺尊重我的，也没有再催我了，我也在犹豫还要不要再发出来。</p><p><img src="https://yancey597.github.io/posts/26767/song.jpg#pic_center"></p><ul><li><strong>早睡早起</strong></li></ul><p>  争取把入睡时间再往前提一个小时，希望几个星期后差不多接近正常作息：23:00之前。</p><ul><li><strong>坚持锻炼</strong></li></ul><p>  坚持锻炼是一个长期的过程，希望能和上学期一样每天坚持吧，尽管天气变冷了….</p><ul><li><strong>掌控情绪</strong></li></ul><p>  这个没啥好说的其实，不开心的时候有朋友来找直接告诉对方不开心就行，别再摆个臭脸了。</p><hr><h2 id="三、一些感受"><a href="#三、一些感受" class="headerlink" title="三、一些感受"></a>三、一些感受</h2><h3 id="夜间骑行"><a href="#夜间骑行" class="headerlink" title="夜间骑行"></a>夜间骑行</h3><p>  本周的第二次骑行——晚上一个人不开导航漫无目的的往前骑。本来在寝室待着准备刷会知乎，突然冒出来这个奇奇怪怪的想法。不知道自己要到哪去，但还是穿上衣服就出发了，出去骑车锻炼锻炼总比宅在宿舍好吧，<strong>得动起来，然后再去找寻意义：</strong>“我将不顾一切的来到这地方”。</p><p><img src="https://yancey597.github.io/posts/26767/dhc.jpg#pic_center"></p><p>  看着路灯下自己影子被拉长到消失，感受脸颊被带着些许寒意的冷风轻轻拂过，看着穿行在城市大道上的行色匆匆的人们，每个人都朝着更好的生活前进着……骑了不知道多久，也没有刻意控制方向。</p><p><img src="https://yancey597.github.io/posts/26767/road.jpg#pic_center"></p><p>  奇妙的是兜兜转转又回到了学校，哈哈哈哈哈哈哈，这就是生活的意义吧，<strong>我们一生中都在不停的遇见和道别，尽管讨厌再见，但不能失去去追寻美好、说”你好”的勇气</strong>。而且离开也不完全是坏事呀，或许在未来的某个时刻，<strong>曾经走散的人又会兜兜转转的、以一个更好的自己、以一种更好的方式再次相见呢。</strong></p><p><img src="https://yancey597.github.io/posts/26767/life.jpg#pic_center"></p><p><strong>“日常生活中的美好瞬间，便足以支撑起人生的全部意义。”</strong></p><hr><h3 id="享受独处但不拒绝同行"><a href="#享受独处但不拒绝同行" class="headerlink" title="享受独处但不拒绝同行"></a>享受独处但不拒绝同行</h3><p>  前面一段时间，基本上把自己整个人算是封闭起来了，啥活动都不想参加，有朋友叫着出去玩也不想去，整个人待宿舍一直逼自己肝项目，美曰：爱学习，实在无聊就弹会吉他。现在回头看看真的就是单纯想逃避罢了…….这段时间身边的朋友一直陪我一起承受着负面情绪开导我，我会好起来的，然后昨天去聚餐就是一个好的开始吧。</p><p><img src="https://yancey597.github.io/posts/26767/weibo.jpg#pic_center"></p><p>  <strong>他们对我说的最多的话抽象出来其实是做正确的选择和对的选择</strong>，但这种事情有绝对的正确和错误吗？</p><p>  开学刚报道认识我的很多人都以为我和… 在一起了哈哈哈哈，然后现在把自己搞这么难堪，他们是<strong>一边嘲笑一边安慰我</strong>：让我晚上不要做决定 ……..省略一万字。</p><p>  道理我都懂，我也知道他们的本意都是想让我好，哈哈哈还有他们上学期吃了一学期的瓜，我真没意识到表现的有这么明显吗？到头来好像就我一个人是局外人，直到他们一条条列举出来一条条鞭尸，笑死。</p><p>  现在又出了这么个事，抛开刚才那些，大家都迫不及待想看大结局了。<strong>但现阶段其实对我最重要的不是立即再找一个人来填补内心的空缺，反思总结提升改变自己才是最重要的</strong>，我也不至于缺爱到这种程度。而且我也不知道我现在是个什么想法，是不是真的喜欢她或者是放不下，放不下就是放不下，真的不能逼自己了，<strong>只能是顺其自然、交给时间，相比于再谈一次，我更愿意把一切交给时间。</strong>再说这也不是一厢情愿的事，这些都只能等我能以一种平和的心态来面对她再说吧。她之前也知道我“喜欢她”的，所以现在见面有时候我都觉得挺尴尬，有时候不知道该说什么，毛xx每次又故意刺激我，md昨天聚餐因为这个让我多喝了几杯！！   </p><p><strong>最后的最后，还是开头的那句话：消极的情绪放一放、停一停，顺其自然，交给时间，要开心点。</strong></p><hr><p><strong>永远相信美好的事情即将发生！</strong></p><p><strong>Yancey</strong><br><strong>2021.10.19 10:00</strong></p></body></html>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 周记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>呼兰</title>
      <link href="/posts/43964.html"/>
      <url>/posts/43964.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h1 id="某某与我——呼兰"><a href="#某某与我——呼兰" class="headerlink" title="某某与我——呼兰"></a>某某与我——呼兰</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>“笑，是生活的麻药；温柔地打碎笑的幻觉，大概也就是这样了。”</p></blockquote><p><img src="https://yancey597.github.io/posts/43964/1.jpg#pic_center"></p><p>  因为上面这些句话，呼兰上热搜了。呼兰——毕业于哥伦比亚大学精算系，<strong>学霸</strong>是他身上最鲜明的标签。王建国认为他是公司智商最高的人，李诞、程璐对他的智商与学习能力都给出了极高的评价。因为喜欢脱口秀大会的原因，所以我对他也非常了解，同时他也是我非常喜爱的选手之一。</p><p>  <img src="https://yancey597.github.io/posts/43964/cover.jpg#pic_center"></p><p>  <strong>关于呼兰的介绍就不多说了感兴趣的可以移步他的微博或者自行搜索。</strong></p><p>  <a href="https://weibo.com/u/1794698917">呼兰的微博</a></p><hr><h2 id="我的感想"><a href="#我的感想" class="headerlink" title="我的感想"></a>我的感想</h2><p><img src="https://yancey597.github.io/posts/43964/cover1.jpg#pic_center"></p><blockquote><p>1.每一部分你的经历你的影响都融在你的骨子里面，这些经历或多或少都促使你成为现在这么一个人。</p></blockquote><p>  其实人生中<strong>每一段经历对现在自我形成的影响都大</strong>，每一段经历都是必不可少的。我们没有办法去倒推说如果没有这段经历你会成为什么样子，所以我们不要去回想曾经的某个结点我如果做了什么，后来会是什么样子。我们能做的就是解决还没解决的问题，目光放的长远一点。</p><p><img src="https://yancey597.github.io/posts/43964/2.jpg#pic_center"></p><blockquote><p>2.创作是进无止境的，你可以看到一个天赋极高、能力极强的人，也是孜孜不倦的。</p></blockquote><p>  被创作所驱动的人，是发光的；被兴趣所驱动的人也是会发光的，那种对现状不满，发誓要改变的动力也是极强的。这里提一个我喜欢一加的原因，<strong>“1”代表的是“现状”，“+”则代表的是“更好和更多的可能性。</strong></p><p><img src="https://yancey597.github.io/posts/43964/oneplus.jpg#pic_center"></p><blockquote><p>3.有的时候我听到我去年说的一些话会感到羞愧和羞耻。如果一个人拿着你去年、几年前的一些东西在洋洋得意的话，那你这几年在干啥呢？</p></blockquote><p>  这句话真是醍醐灌顶，面对生活中的一些不如意的时候，我经常会去想曾经的自己——那个拥有美好未来最好年纪的自己，也经常和身边的人讲之前的事，<strong>现在想起来真是羞愧万分。</strong>，当然现在改变也不晚，加油！</p><blockquote><p>4.不要把解决问题当成你的使命，能改变一些当然最好，如果是奔着解决问题去的，你是会幻灭的。</p></blockquote><p>   如果抱着解决问题的态度去做事，在你真正开始行动之前，你可能就会觉得说<strong>做这件事是无用的、定义为没有意义的事</strong>，其实不需要这样，让现状变好一点就可以了。我想起了之前老罗语录的一句话：<strong>每一个生命来到这世界，都注定要改变这个世界，你别无选择，如果你做一个好人，这个世界就因为你变得美好了一点点</strong>。<br><img src="https://yancey597.github.io/posts/43964/lyh.jpg#pic_center"></p><p>   所以放手去做吧，去完成那些年少的梦、那些一直想做但没有做的事情，不要纠结于结果，也不要害怕失去。这里插一句丢火车的歌词：”我将不顾一切的，来到这地方。”</p><p><img src="https://yancey597.github.io/posts/43964/dhc.jpg#pic_center"></p><blockquote><p>5.一点点来，边走边想，走起来才知道方向对不对，但不能停留，不要站在原地去找意义。<br>6.做完了一件事再去赋予意义，什么都不做，他是不会存在意义的。</p></blockquote><p>   这两句话更像是对上一句话的继承，要行动起来，不能留在原地去找寻，要在行动中去找寻意义，想到这里其实想说的话特别特别多，偏哲学问题了。害，就先说这些吧，毕竟懂和做到，<strong>也就是”知行合一“的境界太难了，这应该是我们用一生为之奋斗的目标。</strong></p><h2 id=""><a href="#" class="headerlink" title=""></a><img src="https://yancey597.github.io/posts/43964/jy.jpg#pic_center"></h2><p><strong>永远相信美好的事情即将发生！</strong><br><strong>Yancey</strong><br><strong>2021-10-13 23:43:01</strong></p></body></html>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 观后感 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>思考与勇气</title>
      <link href="/posts/51864.html"/>
      <url>/posts/51864.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h1 id="思考与勇气"><a href="#思考与勇气" class="headerlink" title="思考与勇气"></a>思考与勇气</h1><blockquote><p>向内生根才能向外发散，唯有勇气，才是照亮你的那束光。</p></blockquote><h2 id="一、每周总结"><a href="#一、每周总结" class="headerlink" title="一、每周总结"></a>一、每周总结</h2><h3 id="1-计划完成情况"><a href="#1-计划完成情况" class="headerlink" title="1. 计划完成情况"></a>1. 计划完成情况</h3><ul><li><input disabled="" type="checkbox"> <strong>早睡早起</strong></li></ul><p>  未完成，周平均入睡时间为02:34(害怕)。</p><p>  <img src="https://yancey597.github.io/posts/51864/sleep.jpg#pic_center"></p><p>  前几天在忙博客的搭建，一写起来就忘记了时间，不看时间还好，一看就是三更半夜了。上床之后再逛逛微博、知乎随随便便就三四点，一觉睡醒就快中午了，还不愿意起床。知乎有毒！</p><ul><li><input checked="" disabled="" type="checkbox"> <strong>每天坚持学习</strong></li></ul><p>  基本完成了，每天学习时间至少有<strong>5个小时</strong>且收获很大。</p><p>  <img src="https://yancey597.github.io/posts/51864/study.jpg#pic_center"></p><p>  这个星期决定从0开始系统的学习了Java编程语言，尚硅谷的宋红康老师yyds。非常适合有编程基础的同学学习，老师能够深入浅出的讲解每一个知识点，和平时上课只知道念PPT的老师相比学习效率高多了，果然大学还是得靠自学。</p><ul><li><input disabled="" type="checkbox"> <strong>每天坚持锻炼</strong></li></ul><p>  每晚骑车的计划只坚持了两天，武汉这鬼天气嗷，夏天到秋天真的只要一晚上，给我冻傻了都！骑车的时候还被导航软件给坑了，直接把我往家里面导，即将达成成就：一晚上骑行550km！</p><p>  <img src="https://yancey597.github.io/posts/51864/circling.jpg#pic_center"></p><ul><li><input checked="" disabled="" type="checkbox"> <strong>减少emo</strong></li></ul><p>  这周emo的次数相比上周好了太多了，上个星期基本上全天emo，啥都干不了，一到下午就感觉跟要死了一样。本周可以做一些自己的事了，整个人也挺精神不少。也没有去关注她的任何消息，不知道是不是太克制了，昨天晚上梦到她了，今天早上一觉醒来怅然若失的感觉席卷而来，emo了半小时。</p><h3 id="2-下周计划"><a href="#2-下周计划" class="headerlink" title="2. 下周计划"></a>2. 下周计划</h3><ul><li><p><strong>早睡早起</strong><br>  把所有工作移到白天完成，在22:30以后尽量不触碰电子设备，把很久之前的书拿出来看看，尝试在23:00准时休息。</p></li><li><p><strong>坚持学习</strong></p></li></ul><p>  数据结构、Java、数据库、JS、计算机科学、英语、乐理。<br>  合理分配好时间，确保每天都学习，利用好Notion做好笔记并按时复习，循序渐进的去学习，<strong>每天总结当天学习成果</strong>。</p><ul><li><input disabled="" type="checkbox"> <strong>坚持锻炼</strong></li></ul><p>  上个星期定的每天坚持骑车其实是不现实的，这个星期尝试跑步，间隔着去骑车，尽量把时间移到白天，晚上太冷了骑车可能感冒。</p><ul><li><input disabled="" type="checkbox"> <strong>掌控情绪</strong></li></ul><p>  可以emo，不要去压制内心的想法，去接纳消极的情绪，emo的时候可以跟朋友多交流交流，不要封闭自己。</p><h2 id="二、对自己的一些思考"><a href="#二、对自己的一些思考" class="headerlink" title="二、对自己的一些思考"></a>二、对自己的一些思考</h2><h3 id="1-断舍离"><a href="#1-断舍离" class="headerlink" title="1. 断舍离"></a>1. 断舍离</h3><blockquote><p>你如果可以把很多问题的答案明确，那其他关系对你来说就真的没有那么重要。同时也知道那些关系是对自己真正重要的人。</p></blockquote><p>  在一次emo之后，突然顿悟了，知道自己想要的到底是什么东西，对自己有了更清晰的定位，也再次明确了自己的发展方向。本周我开始专注向内了，减少了绝大多数的无效社交，专注提升自己。</p><h3 id="2-这个世界有多美好"><a href="#2-这个世界有多美好" class="headerlink" title="2. 这个世界有多美好"></a>2. 这个世界有多美好</h3><blockquote><p>在这个庞大的世界里，你所能知道的事情渺小得微不足道。但幸运的是你要知道你该爱的人 该对谁好 该弥补谁，你要知道不该用敌对的目光看待他人 看待世界，你将会明白这个世界有多么的美好。</p></blockquote><p>  为什么感觉到活着累呢，首先是没有目标，不知道自己想要的到底是什么，或者是在朝着目标奋力前进时，被在社会赋予的各种KPI压倒，反而忘记了生活真正的意义——生活本身。</p><p>  活着的真正意义，就藏在我们看似每天都看似平淡无奇的生活中——那些在你看来习以为常的东西，日常生活的美好瞬间，便足以支撑起人生的所有意义。</p><p>  当你一直前进，不知道已经走出多久的时候，可以停下脚步，你会感受到微风吹拂。走记得抬头看看，那里有阳光与星空，也有未知和无限的可能。</p><h3 id="3-合理接纳负面情绪"><a href="#3-合理接纳负面情绪" class="headerlink" title="3.合理接纳负面情绪"></a>3.合理接纳负面情绪</h3><h4 id="1-接纳自己的情绪和感受"><a href="#1-接纳自己的情绪和感受" class="headerlink" title="1.接纳自己的情绪和感受"></a><strong>1.接纳自己的情绪和感受</strong></h4><p>  与其压抑让自己不开心的情绪和感受，不如尝试在内心为它们腾出更多的空间。因为每一种情绪都有着关于我们自身的信息，我们可以去思考这些情绪和感受在告诉什么，在其背后究竟是什么。</p><p><strong>不要去压抑这种感受，而是让它在内心存在，这样反而会受到更少的侵扰。</strong></p><h4 id="2-与当下的生活进行联结"><a href="#2-与当下的生活进行联结" class="headerlink" title="2.与当下的生活进行联结"></a>2.与当下的生活进行联结</h4><p>  反思过去和规划未来固然重要，但当下的生活同样值得我们投入和感受。我们可以从观察周围的环境开始，练习一种“活在当下”的习惯：认真看看身边的东西，它们的颜色和纹理；摸一摸它们，感受不同的触感。</p><h4 id="3-明确自己真正认可的价值"><a href="#3-明确自己真正认可的价值" class="headerlink" title="3.明确自己真正认可的价值"></a>3.明确自己真正认可的价值</h4><p>  与其纠结于自身是否快乐幸福，不如想着去过自己认可的生活。在这个过程中，我们会感到开心，也会感到难过和烦躁。这些都是生活真实的面向，也是生而为人真实的模样。</p><hr><p><strong>永远相信美好的事情即将发生！</strong></p><p><strong>Yancey</strong><br><strong>2021-10-10 17:11:01</strong></p></body></html>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 周记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows11</title>
      <link href="/posts/45425.html"/>
      <url>/posts/45425.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h1 id="Windows11-体验分享及升级教程"><a href="#Windows11-体验分享及升级教程" class="headerlink" title="Windows11 体验分享及升级教程"></a>Windows11 体验分享及升级教程</h1><blockquote><p>10月5日，大家期待已久的Win11正式版终于发布了，符合条件的Win10电脑可获得免费升级。</p></blockquote><img src="https://gitee.com/yancey597/img-load/raw/master/images/Win11-6.jpg"><h2 id="1-Win11系统最低配置要求"><a href="#1-Win11系统最低配置要求" class="headerlink" title="1. Win11系统最低配置要求"></a>1. Win11系统最低配置要求</h2><p>1、处理器：1 GHz 或更快的支持 64 位的处理器（双核或多核）或系统单芯片 (SoC)<br>2、内存：4 GB RAM<br>3、存储：64 GB 或更大的存储设备<br>4、系统固件：支持 UEFI 安全启动<br>5、TPM：受信任的平台模块 (TPM) 2.0 版本<br>6、显卡：支持 DirectX 12 或更高版本，支持 WDDM 2.0 驱动程序<br>7、显示器：对角线长大于 9 英寸的高清 (720p) 显示屏，每个颜色通道为 8 位<br>8、Internet 连接：Windows 11 家庭版的设置需要具有 Microsoft 帐户和 Internet 连接</p><img src="https://gitee.com/yancey597/img-load/raw/master/images/Win11 (2).jpg"><p><a href="https://www.microsoft.com/zh-cn/windows/windows-11-specifications#table1">点我前往微软官网查看原文</a></p><h2 id="2-Win11有哪些亮点？"><a href="#2-Win11有哪些亮点？" class="headerlink" title="2. Win11有哪些亮点？"></a>2. Win11有哪些亮点？</h2><p>全新的设计语言、全面优化的触控体验、直接运行Android应用以及更强的游戏性能。<br>新系统给我最大的感受是<strong>UI扁平化</strong>带来的视觉上的协调和统一。</p><p><strong>选几个我感兴趣的点讲一讲。</strong></p><img src="https://gitee.com/yancey597/img-load/raw/master/images/Win11-32.jpg"><h3 id="2-1-UI全面升级"><a href="#2-1-UI全面升级" class="headerlink" title="2.1 UI全面升级"></a>2.1 UI全面升级</h3><h4 id="1）新logo、新壁纸和新图标"><a href="#1）新logo、新壁纸和新图标" class="headerlink" title="1）新logo、新壁纸和新图标"></a>1）新logo、新壁纸和新图标</h4><img src="https://gitee.com/yancey597/img-load/raw/master/images/Win11-14.jpg"><center>历代Windows Logo</center><img src="https://gitee.com/yancey597/img-load/raw/master/images/Win11-17.jpg"><center>Win11的logo变成了方正的「田」字，爷青结。</center><img src="https://gitee.com/yancey597/img-load/raw/master/images/Win11-7.png"><center>部分图标重新绘制，比如回收站、各类文件夹等。</center><h4 id="2）任务栏居中"><a href="#2）任务栏居中" class="headerlink" title="2）任务栏居中"></a>2）任务栏居中</h4><p>Win11将开始菜单和任务栏居中放置，开始菜单取消了磁贴设计，取而代之的是软件库，搜索、任务视图等应用，均采用了卡片的样式，悬浮于任务栏上方。</p><img src="https://gitee.com/yancey597/img-load/raw/master/images/Win11-15.jpg"><center>开始菜单样式</center><img src="https://gitee.com/yancey597/img-load/raw/master/images/Win11-19.jpg"><center>任务栏样式</center><img src="https://gitee.com/yancey597/img-load/raw/master/images/Win11-16.jpg"><center>可以在任务栏设置中关闭搜索等选项显示</center><p>Win11重新设计了设置面板，分栏式布局取代了之前的菜单选项。可以保证用户在任何时候都能跳转到所需的模块。添加了左侧导航栏、面包屑导航，以便用户深入导航到“设置”以帮助用户了解自己所处的路径。设置页面顶部有新的控件，突出显示关键信息和常用设置，供用户根据需要进行调整。并且，设置面板对具有大量设置的页面添加了可扩展框。</p><img src="https://gitee.com/yancey597/img-load/raw/master/images/Win11-23.jpg"><center>设置面板</center><h4 id="3）新的右键菜单"><a href="#3）新的右键菜单" class="headerlink" title="3）新的右键菜单"></a>3）新的右键菜单</h4><p>Win11的桌面右键菜单启用新UI，位置间距更大</p><img src="https://gitee.com/yancey597/img-load/raw/master/images/Win11-20.jpg"><center>右键菜单</center><h4 id="4）通知中心-操作中心"><a href="#4）通知中心-操作中心" class="headerlink" title="4）通知中心/操作中心"></a>4）通知中心/操作中心</h4><p>Win11的通知中心采用分离式UI，不再与操作中心绑在一起。日历面板提供了折叠功能，可以为通知区域预留更多空间。除了外观上的变化外，新版还为部分面板添加了可操作按钮。比如刚刚更新好的应用，就能直接打开或是固定到开始菜单上。</p><img src="https://gitee.com/yancey597/img-load/raw/master/images/Win11-13.jpg"><center>新版控制中心</center><img src="https://gitee.com/yancey597/img-load/raw/master/images/Win11-22.jpg"><center>新版日历</center><h3 id="2-2-功能更加实用"><a href="#2-2-功能更加实用" class="headerlink" title="2.2 功能更加实用"></a>2.2 功能更加实用</h3><h4 id="1）虚拟桌面"><a href="#1）虚拟桌面" class="headerlink" title="1）虚拟桌面"></a>1）虚拟桌面</h4><p><strong>这可能是最完美摸鱼神器。</strong><br>Win11完善了虚拟桌面功能，在原有基础上允许各个“桌面”拥有自己的主题、壁纸、名称。新设计调整了桌面工具栏位置，以方便触屏用户快速取用。</p><img src="https://gitee.com/yancey597/img-load/raw/master/images/Win11-31.jpg"><center>虚拟桌面</center><h4 id="2）新版微软商店"><a href="#2）新版微软商店" class="headerlink" title="2）新版微软商店"></a>2）新版微软商店</h4><p>Win11的应用商店也进行了重整，最直观感受就是界面更漂亮了。除了UWP应用外，新商店提供Win32程序、PWA、.apk 等更多应用格式下载。并且扩充音乐、视频、电影等更多资源。</p><img src="https://gitee.com/yancey597/img-load/raw/master/images/Win11-27.jpg"><center>新版微软商店</center><h4 id="3）可以直接运行安卓程序-跳票了"><a href="#3）可以直接运行安卓程序-跳票了" class="headerlink" title="3）可以直接运行安卓程序(跳票了)"></a>3）可以直接运行安卓程序(跳票了)</h4><p>Win11内置Android子系统，可直接运行Android应用，用户可以在Microsoft Store中的亚马逊应用商店或其它来源搜索和下载Android应用。Android 应用可以直接运行在Win11上，同时拥有相应的功能体验。</p><img src="https://gitee.com/yancey597/img-load/raw/master/images/Win11-36.jpg"><center>安卓应用</center><h3 id="2-3-游戏性能优化"><a href="#2-3-游戏性能优化" class="headerlink" title="2.3 游戏性能优化"></a>2.3 游戏性能优化</h3><p>Win11带来了一系列尖端游戏技术，让 PC 的硬件潜力充分释放。</p><img src="https://gitee.com/yancey597/img-load/raw/master/images/Win11-9.jpg"><center>游戏设置界面改版</center><h4 id="1）三大技术加持"><a href="#1）三大技术加持" class="headerlink" title="1）三大技术加持"></a>1）三大技术加持</h4><p><strong>DirectX 12 Ultimate技术</strong>，旨在让玩家高帧率模式下，实现更具沉浸感的画面体验。<br><strong>DirectStorage（直通存储）技术</strong>已在Xbox Series S/X应用，游戏可绕过 CPU，直接载入GPU中，从而大大提升加载速度。</p><img src="https://gitee.com/yancey597/img-load/raw/master/images/Win11-10.jpg"><center>Auto HDR</center><h4 id="2）内置-XGP"><a href="#2）内置-XGP" class="headerlink" title="2）内置 XGP"></a>2）内置 XGP</h4><p>用户可付费开通<strong>Xbox Games Pass</strong>游戏订阅服务，直接从PC端访问Xbox的游戏库。目前Xbox商店里已有上百款精选3A大作，这对热爱游戏的玩家来说，的确令人心动。</p><img src="https://gitee.com/yancey597/img-load/raw/master/images/Win11-29.jpg"><center>XBox &amp; Win11</center><h2 id="3-影响体验的地方"><a href="#3-影响体验的地方" class="headerlink" title="3. 影响体验的地方"></a>3. 影响体验的地方</h2><p><strong>AMD和微软</strong> 在近日都已经宣承认，由于Windows 11的两个兼容性问题，会导致相应的AMD处理器在使用Windows 11的时候，出现性能不同程度下滑的现象。目前来看，这个问题只会出现在锐龙处理器上。当然如果不是锐龙处理器的话，也不在微软Windows 11支持的处理器产品中，出现什么问题微软和AMD也不会负责。</p><img src="https://gitee.com/yancey597/img-load/raw/master/images/Win11-35.jpg"><center>AMD</center><h4 id="1）新通知不明显"><a href="#1）新通知不明显" class="headerlink" title="1）新通知不明显"></a>1）新通知不明显</h4><p>诸如微信、QQ一类的通讯软件，收到消息后不会像过去一样以整个高亮颜色提醒，只有一个不太明显的颜色变化，容易漏看信息；</p><img src="https://gitee.com/yancey597/img-load/raw/master/images/Win11-18.jpg"><center>QQ</center><h4 id="2）右键菜单折叠"><a href="#2）右键菜单折叠" class="headerlink" title="2）右键菜单折叠"></a>2）右键菜单折叠</h4><p>不仅套娃，现阶段使用右键菜单弹出有2s左右延迟，严重影响体验(可能是现象级Bug)。<br><img src="https://gitee.com/yancey597/img-load/raw/master/images/Win11-21.jpg"></p><center>延迟弹出</center><h4 id="3）日常打开文件目录卡顿"><a href="#3）日常打开文件目录卡顿" class="headerlink" title="3）日常打开文件目录卡顿"></a>3）日常打开文件目录卡顿</h4><p>打开文件目录经常卡顿延迟，明显感受的到不流畅</p><img src="https://gitee.com/yancey597/img-load/raw/master/images/Win11-8.jpg"><center>文件目录卡顿</center><h4 id="4）任务栏奇大无比"><a href="#4）任务栏奇大无比" class="headerlink" title="4）任务栏奇大无比"></a>4）任务栏奇大无比</h4><p>上次看见这么大的下把还是在隔壁友商移动设备上。</p><img src="https://gitee.com/yancey597/img-load/raw/master/images/Win11-30.jpg"><center>某友商设备</center><h2 id="4-如何升级Win11"><a href="#4-如何升级Win11" class="headerlink" title="4. 如何升级Win11"></a>4. 如何升级Win11</h2><h3 id="1-通过微软推送更新，从”Windows更新”升级"><a href="#1-通过微软推送更新，从”Windows更新”升级" class="headerlink" title="1. 通过微软推送更新，从”Windows更新”升级"></a>1. 通过微软推送更新，从”Windows更新”升级</h3><p>在Windows 11升级推送期间，微软将进行一些后台测试和对特定电脑进行验证。Windows 更新将向用户指出其电脑是否符合升级条件以及何时可以升级。同时，用户可以进入“设置”/“Windows更新”中进行查看。打开该界面之后，就已经看到支持升级到Windows 11的提示。</p><img src="https://gitee.com/yancey597/img-load/raw/master/images/Win11-24.jpg"><center>Windows更新</center><h3 id="2-手动升级"><a href="#2-手动升级" class="headerlink" title="2. 手动升级"></a>2. 手动升级</h3><h4 id="1）下载安装微软官方“电脑健康状况检查”应用"><a href="#1）下载安装微软官方“电脑健康状况检查”应用" class="headerlink" title="1）下载安装微软官方“电脑健康状况检查”应用"></a>1）下载安装微软官方“电脑健康状况检查”应用</h4><img src="https://gitee.com/yancey597/img-load/raw/master/images/Win11-25.jpg"><center>电脑健康状况检查</center><p><a href="https://aka.ms/GetPCHealthCheckApp">官网下载</a><br><a href="http://t.cn/A6MJkv8p">网盘打包下载:提取码 win1</a></p><h4 id="2）下载安装微软官方“Win11-升级助手”应用"><a href="#2）下载安装微软官方“Win11-升级助手”应用" class="headerlink" title="2）下载安装微软官方“Win11 升级助手”应用"></a>2）下载安装微软官方“Win11 升级助手”应用</h4><img src="https://gitee.com/yancey597/img-load/raw/master/images/Win11-26.jpg"><center>Win11 升级助手</center><img src="https://gitee.com/yancey597/img-load/raw/master/images/Win11-1.jpg"><center>等待安装完成即可</center><h4 id="3）Enjoy-it"><a href="#3）Enjoy-it" class="headerlink" title="3）Enjoy it"></a>3）Enjoy it</h4><img src="https://gitee.com/yancey597/img-load/raw/master/images/Win11-7.png"><center>Windows11</center><hr><p><strong>永远相信美好的事情即将发生！</strong></p><p><strong>Yancey</strong><br><strong>2021-10-8 0:53:01</strong></p></body></html>]]></content>
      
      
      <categories>
          
          <category> 资讯 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>国庆假后第一天</title>
      <link href="/posts/14906.html"/>
      <url>/posts/14906.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h1 id="国庆假后第一天"><a href="#国庆假后第一天" class="headerlink" title="国庆假后第一天"></a>国庆假后第一天</h1><h2 id="一-不想早读的一天"><a href="#一-不想早读的一天" class="headerlink" title="一. 不想早读的一天"></a>一. 不想早读的一天</h2><p> 苦逼大学生，XX东湖，国庆只放三天假。昨晚写博客到三点，今天早上还要去早读。害，睡醒整个人都是懵的，然后身体又不舒服，果断给燕姐请假不去早读。我的内心只有一个想法，只要不离开床，让我干啥都行。<br><img src="https://yancey597.github.io/posts/14906/suijiao.jpg#pic_center" width="150"></p><h2 id="二-数据结构课上那点事儿"><a href="#二-数据结构课上那点事儿" class="headerlink" title="二. 数据结构课上那点事儿"></a>二. 数据结构课上那点事儿</h2><p> 依旧是没吃早饭的一天，第二次睡醒后匆匆忙忙洗漱便匆匆忙忙骑着车去上课了，今天就一节《数据结构》的课，老师说院里不给调课，要院长同意什么乱七八糟的，不然今天应该也是休息日，淦。上课的内容无非也就是栈和队列，我很早之前就学了这个；但老师中途和我们互动的时候问了一个巨简单的问题，当时没怎么认真听就忙着回答了，场面一度非常尴尬，还被隔壁的李姓同学恶心了一下。<br><img src="https://yancey597.github.io/posts/14906/kaixinya.jpg#pic_center" width="150"></p><p>放之前我肯定会无语一阵，但今天还好，很快就调整过来了。可能是当时我的脸色不是很好，中途一哲Bro来关心我(当时我已经没事了)，但他还是担心我的状态，他说了一句让我印象很深的话。</p><blockquote><p>人总要有点善意的保留，但如果当保留成为解决问题的阻碍的时候，就不能保留了需要倾诉。</p></blockquote><p> 哈哈哈，突然意识到之前的一些行为是多么的愚蠢。</p><h2 id="三-不能点校外卖的第一天"><a href="#三-不能点校外卖的第一天" class="headerlink" title="三. 不能点校外卖的第一天"></a>三. 不能点校外卖的第一天</h2><p> 本来以为会对我的生活造成很大影响，但实际并没有！今天中午发现了学校居然有一家挺好吃的煲仔饭，分量足味道也相当nice，有青菜真的是非常健康了。吃着鱼香肉丝煲仔饭，一直觉得味道很熟悉，想半天终于回忆起来了：这个味道特别像我八月底骑行过程中在南漳县吃的“香他她煲仔饭”！哈哈哈，又短暂的陷入了回忆。今天晚上又点了这家店的煲仔饭，爱了爱了。<br><img src="https://yancey597.github.io/posts/14906/fan.jpg#pic_center" width="150"><br> 生活中很多事也是这样的，人总是把目光投向很远的地方，但忽视身边美好的一些事。哈哈哈，小学二年级都学过的内容：世界上不缺少美，只缺少发现美的眼睛。</p><h2 id="四-日常相信星座"><a href="#四-日常相信星座" class="headerlink" title="四. 日常相信星座"></a>四. 日常相信星座</h2><p> 老是被<a href="https://weibo.com/u/7485768329">@白桃星座</a>的星座运势预判，我不太理解了，真的就几乎一模一样。<br> 最近有在认真思考自己到底想要的是什么及后续发展方向。在最近经历了一些事后，对自己又有了新的认识，前两天也确实遇到了超级聊的来的新朋友。最后一句话挺真实，别看轻自己，能量巨大。<br><a href="https://weibo.com/7485768329/KB3ZCy29H">微博原文</a><br><img src="https://yancey597.github.io/posts/14906/suipin.jpg#pic_center" width="150"></p><hr><p><strong>永远相信美好的事情即将发生！</strong><br><strong>晚安</strong></p><p><strong>Yancey</strong><br><strong>2021-10-4 23:54:01</strong></p></body></html>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
